[gd_scene load_steps=5 format=3 uid="uid://bw4xk1l1t5ks2"]

[ext_resource type="PackedScene" uid="uid://cyp50ln3gbmtt" path="res://Common/Systems/spawner/enemy_spawner.tscn" id="1_spawner"]
[ext_resource type="PackedScene" uid="uid://dkcr3l3x8ks7j" path="res://Common/Systems/spawner/wave.tscn" id="2_wave"]
[ext_resource type="PackedScene" uid="uid://bwhean8gy2rcd" path="res://Entities/Enemies/Templates/base_enemy/enemy.tscn" id="3_enemy"]

[sub_resource type="GDScript" id="GDScript_debug"]
code = "extends Node3D

@onready var spawner: EnemySpawner = $EnemySpawner

func _ready():
    # Connect to spawner signals for debugging
    spawner.wave_started.connect(_on_wave_started)
    spawner.wave_completed.connect(_on_wave_completed)
    spawner.all_waves_completed.connect(_on_all_waves_completed)
    spawner.enemy_spawned.connect(_on_enemy_spawned)

func _on_wave_started(wave: Wave):
    print(\"Wave started: Duration \", wave.duration, \"s, Enemies: \", wave.enemy_scenes.size())

func _on_wave_completed(wave: Wave):
    print(\"Wave completed!\")

func _on_all_waves_completed():
    print(\"All waves completed!\")

func _on_enemy_spawned(enemy: Node3D):
    print(\"Enemy spawned: \", enemy.name)
"

[node name="WaveSpawnerExample" type="Node3D"]
script = SubResource("GDScript_debug")

[node name="EnemySpawner" parent="." instance=ExtResource("1_spawner")]
max_enemies = 20

[node name="Wave1" parent="EnemySpawner" instance=ExtResource("2_wave")]
duration = 10.0
start_delay = 2.0
enemy_scenes = Array[PackedScene]([ExtResource("3_enemy")])
enemy_counts = Array[int]([5])
spawn_interval = 1.5

[node name="Wave2" parent="EnemySpawner" instance=ExtResource("2_wave")]
duration = 15.0
start_delay = 1.0
enemy_scenes = Array[PackedScene]([ExtResource("3_enemy")])
enemy_counts = Array[int]([8])
spawn_interval = 1.0

[node name="Wave3" parent="EnemySpawner" instance=ExtResource("2_wave")]
duration = 20.0
enemy_scenes = Array[PackedScene]([ExtResource("3_enemy")])
enemy_counts = Array[int]([12])
spawn_interval = 0.8